/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../../../common";
import type {
  GatewayContract,
  GatewayContractInterface,
} from "../../../../contracts/fhevm/lib/GatewayContract";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gatewayOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "_kmsVerifier",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "realyer",
        type: "address",
      },
    ],
    name: "AddedRelayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "cts",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "contractCaller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4",
        name: "callbackSelector",
        type: "bytes4",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "passSignaturesToCaller",
        type: "bool",
      },
    ],
    name: "EventDecryption",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "realyer",
        type: "address",
      },
    ],
    name: "RemovedRelayer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    name: "ResultCallback",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_DELAY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "addRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "counter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "decryptedCts",
        type: "bytes",
      },
      {
        internalType: "bytes[]",
        name: "signatures",
        type: "bytes[]",
      },
    ],
    name: "fulfillRequest",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getVersion",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestID",
        type: "uint256",
      },
    ],
    name: "isExpiredOrFulfilled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRelayer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "relayerAddress",
        type: "address",
      },
    ],
    name: "removeRelayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ctsHandles",
        type: "uint256[]",
      },
      {
        internalType: "bytes4",
        name: "callbackSelector",
        type: "bytes4",
      },
      {
        internalType: "uint256",
        name: "msgValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxTimestamp",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "passSignaturesToCaller",
        type: "bool",
      },
    ],
    name: "requestDecryption",
    outputs: [
      {
        internalType: "uint256",
        name: "initialCounter",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801562000010575f80fd5b50604051620013bd380380620013bd83398101604081905262000033916200010a565b816001600160a01b0381166200006257604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b6200006d8162000081565b506001600160a01b03166080525062000140565b600180546001600160a01b03191690556200009c816200009f565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811462000105575f80fd5b919050565b5f80604083850312156200011c575f80fd5b6200012783620000ee565b91506200013760208401620000ee565b90509250929050565b608051611267620001565f395f50506112675ff3fe6080604052600436106100d9575f3560e01c8063715018a61161007c578063b9244e1d11610057578063b9244e1d14610235578063dd39f00d14610248578063e30c397814610267578063f2fde38b14610284575f80fd5b8063715018a6146101dd57806379ba5097146101f15780638da5cb5b14610205575f80fd5b80634c0d9277116100b75780634c0d92771461015a578063541d55481461017957806360f0a5ac146101a757806361bc221a146101c8575f80fd5b80630d8e6e2c146100dd57806335a30d97146101075780634125ff9014610136575b5f80fd5b3480156100e8575f80fd5b506100f16102a3565b6040516100fe9190610d85565b60405180910390f35b348015610112575f80fd5b50610126610121366004610d97565b61031e565b60405190151581526020016100fe565b348015610141575f80fd5b5061014c6201518081565b6040519081526020016100fe565b348015610165575f80fd5b5061014c610174366004610dd9565b61036c565b348015610184575f80fd5b50610126610193366004610e78565b60036020525f908152604090205460ff1681565b3480156101b2575f80fd5b506101c66101c1366004610e78565b610564565b005b3480156101d3575f80fd5b5061014c60025481565b3480156101e8575f80fd5b506101c661061b565b3480156101fc575f80fd5b506101c661062e565b348015610210575f80fd5b505f546001600160a01b03165b6040516001600160a01b0390911681526020016100fe565b6101c6610243366004610f4f565b610672565b348015610253575f80fd5b506101c6610262366004610e78565b6109d3565b348015610272575f80fd5b506001546001600160a01b031661021d565b34801561028f575f80fd5b506101c661029e366004610e78565b610a8e565b60606040518060400160405280600f81526020017f47617465776179436f6e747261637400000000000000000000000000000000008152506102e45f610b0b565b6102ee6001610b0b565b6102f75f610b0b565b60405160200161030a9493929190611039565b604051602081830303815290604052905090565b5f81815260056020526040812054429060ff168061036557505f838152600460205260409020600301548111801561036557505f8381526004602052604090206003015415155b9392505050565b5f4283116103cc5760405162461bcd60e51b815260206004820152602260248201527f6d617854696d657374616d70206d757374206265206120667574757265206461604482015261746560f01b60648201526084015b60405180910390fd5b6103d962015180426110ca565b8311156104285760405162461bcd60e51b815260206004820152601f60248201527f6d617854696d657374616d70206578636565646564204d41585f44454c41590060448201526064016103c3565b506002545f8181526004602052604081209087905b8181101561048157828a8a83818110610458576104586110dd565b8354600180820186555f958652602095869020929095029390930135920191909155500161043d565b506001820180547fffffffffffffffff00000000000000000000000000000000000000000000000016337fffffffffffffffff00000000ffffffffffffffffffffffffffffffffffffffff811691909117600160a01b60e08b901c0217909155600283018790556003830186905560048301805460ff191686151517905560405184917f2dc9f5cb271a872eb89f488a1d216ded8a5b96226ca01f8d3128e028ae5459f89161053c918d918d91908d908d908d908d906110f1565b60405180910390a260028054905f61055383611175565b919050555050509695505050505050565b61056c610ba8565b6001600160a01b0381165f9081526003602052604090205460ff166105d35760405162461bcd60e51b815260206004820152601860248201527f41646472657373206973206e6f7420612072656c61796572000000000000000060448201526064016103c3565b6001600160a01b0381165f81815260036020526040808220805460ff19169055517ff29639ce9f9f4d0a646c7c99291b0b1d3ca3a017b8f543d03d79d9f6fc4c58249190a250565b610623610ba8565b61062c5f610bd4565b565b60015433906001600160a01b031681146106665760405163118cdaa760e01b81526001600160a01b03821660048201526024016103c3565b61066f81610bd4565b50565b335f9081526003602052604090205460ff166106d05760405162461bcd60e51b815260206004820152600b60248201527f4e6f742072656c6179657200000000000000000000000000000000000000000060448201526064016103c3565b5f8381526005602052604090205460ff161561072e5760405162461bcd60e51b815260206004820152601c60248201527f5265717565737420697320616c72656164792066756c66696c6c65640000000060448201526064016103c3565b5f8381526004602090815260408083208151815460e09481028201850190935260c0810183815290939192849284919084018282801561078b57602002820191905f5260205f20905b815481526020019060010190808311610777575b505050918352505060018201546001600160a01b0381166020830152600160a01b900460e01b6001600160e01b031916604082015260028201546060820152600382015460808083019190915260049092015460ff16151560a09091015281015190915042111561083e5760405162461bcd60e51b815260206004820152600860248201527f546f6f206c61746500000000000000000000000000000000000000000000000060448201526064016103c3565b5f81604001518560405160240161085791815260200190565b60408051601f19818403018152918152602080830180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166001600160e01b03199095169490941790935260a08501519051919350916108b891849188910161118d565b604051602081830303815290604052915080156109115781846040516020016108e191906111bb565b60408051601f19818403018152908290526108ff929160200161118d565b60405160208183030381529060405291505b5f8084602001516001600160a01b0316856060015185604051610934919061121d565b5f6040518083038185875af1925050503d805f811461096e576040519150601f19603f3d011682016040523d82523d5f602084013e610973565b606091505b5091509150877fb0f2a12a0cc059295d0e43aaf8b9eebb32b58c03c68f5406fbf345c3a226bedd83836040516109aa929190611238565b60405180910390a25050505f94855250506005602052505060409020805460ff19166001179055565b6109db610ba8565b6001600160a01b0381165f9081526003602052604090205460ff1615610a435760405162461bcd60e51b815260206004820152601a60248201527f4164647265737320697320616c72656164792072656c6179657200000000000060448201526064016103c3565b6001600160a01b0381165f81815260036020526040808220805460ff19166001179055517fd68caa126e02d8ca92285deaa53a0d5d4f692e587b00422ce504661cc74361bc9190a250565b610a96610ba8565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff199091168117909155610ad35f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b60605f610b1783610bfa565b60010190505f8167ffffffffffffffff811115610b3657610b36610e9e565b6040519080825280601f01601f191660200182016040528015610b60576020820181803683370190505b5090508181016020015b5f19017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084610b6a57509392505050565b5f546001600160a01b0316331461062c5760405163118cdaa760e01b81523360048201526024016103c3565b6001805473ffffffffffffffffffffffffffffffffffffffff1916905561066f81610cdc565b5f807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310610c42577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610c6e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610c8c57662386f26fc10000830492506010015b6305f5e1008310610ca4576305f5e100830492506008015b6127108310610cb857612710830492506004015b60648310610cca576064830492506002015b600a8310610cd6576001015b92915050565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b5f5b83811015610d52578181015183820152602001610d3a565b50505f910152565b5f8151808452610d71816020860160208601610d38565b601f01601f19169290920160200192915050565b602081525f6103656020830184610d5a565b5f60208284031215610da7575f80fd5b5035919050565b80356001600160e01b031981168114610dc5575f80fd5b919050565b80358015158114610dc5575f80fd5b5f805f805f8060a08789031215610dee575f80fd5b863567ffffffffffffffff80821115610e05575f80fd5b818901915089601f830112610e18575f80fd5b813581811115610e26575f80fd5b8a60208260051b8501011115610e3a575f80fd5b602092830198509650610e509189019050610dae565b93506040870135925060608701359150610e6c60808801610dca565b90509295509295509295565b5f60208284031215610e88575f80fd5b81356001600160a01b0381168114610365575f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610edb57610edb610e9e565b604052919050565b5f82601f830112610ef2575f80fd5b813567ffffffffffffffff811115610f0c57610f0c610e9e565b610f1f601f8201601f1916602001610eb2565b818152846020838601011115610f33575f80fd5b816020850160208301375f918101602001919091529392505050565b5f805f60608486031215610f61575f80fd5b8335925060208085013567ffffffffffffffff80821115610f80575f80fd5b610f8c88838901610ee3565b94506040870135915080821115610fa1575f80fd5b818701915087601f830112610fb4575f80fd5b813581811115610fc657610fc6610e9e565b8060051b610fd5858201610eb2565b918252838101850191858101908b841115610fee575f80fd5b86860192505b838310156110285782358581111561100a575f80fd5b6110188d89838a0101610ee3565b8352509186019190860190610ff4565b809750505050505050509250925092565b5f855161104a818460208a01610d38565b61103b60f11b9083019081528551611069816002840160208a01610d38565b808201915050601760f91b806002830152855161108d816003850160208a01610d38565b600392019182015283516110a8816004840160208801610d38565b016004019695505050505050565b634e487b7160e01b5f52601160045260245ffd5b80820180821115610cd657610cd66110b6565b634e487b7160e01b5f52603260045260245ffd5b60c081528660c08201525f7f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff881115611128575f80fd5b8760051b808a60e08501376001600160a01b03979097166020830152506001600160e01b031994909416604085015260608401929092526080830152151560a08201520160e00192915050565b5f60018201611186576111866110b6565b5060010190565b5f835161119e818460208801610d38565b8351908301906111b2818360208801610d38565b01949350505050565b5f60208083016020845280855180835260408601915060408160051b8701019250602087015f5b8281101561121057603f198886030184526111fe858351610d5a565b945092850192908501906001016111e2565b5092979650505050505050565b5f825161122e818460208701610d38565b9190910192915050565b8215158152604060208201525f6112526040830184610d5a565b94935050505056fea164736f6c6343000818000a";

type GatewayContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GatewayContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GatewayContract__factory extends ContractFactory {
  constructor(...args: GatewayContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _gatewayOwner: AddressLike,
    _kmsVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _gatewayOwner,
      _kmsVerifier,
      overrides || {}
    );
  }
  override deploy(
    _gatewayOwner: AddressLike,
    _kmsVerifier: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _gatewayOwner,
      _kmsVerifier,
      overrides || {}
    ) as Promise<
      GatewayContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): GatewayContract__factory {
    return super.connect(runner) as GatewayContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GatewayContractInterface {
    return new Interface(_abi) as GatewayContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): GatewayContract {
    return new Contract(address, _abi, runner) as unknown as GatewayContract;
  }
}

/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  FhevmLib,
  FhevmLibInterface,
} from "../../../../contracts/fhevm/lib/FhevmLib";
import { Contract, Interface, type ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ct",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "toType",
        type: "bytes1",
      },
    ],
    name: "cast",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheAdd",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "lhs",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "rhs",
        type: "uint256[]",
      },
    ],
    name: "fheArrayEq",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheBitAnd",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheBitOr",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheBitXor",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheDiv",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheEq",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheGe",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheGt",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "control",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ifTrue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ifFalse",
        type: "uint256",
      },
    ],
    name: "fheIfThenElse",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheLe",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheLt",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheMax",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheMin",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheMul",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheNe",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ct",
        type: "uint256",
      },
    ],
    name: "fheNeg",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ct",
        type: "uint256",
      },
    ],
    name: "fheNot",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "fromLib",
        type: "bytes1",
      },
    ],
    name: "fhePubKey",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes1",
        name: "randType",
        type: "bytes1",
      },
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "fheRand",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "upperBound",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "randType",
        type: "bytes1",
      },
      {
        internalType: "uint256",
        name: "seed",
        type: "uint256",
      },
    ],
    name: "fheRandBounded",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheRem",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheRotl",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheRotr",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheShl",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheShr",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "lhs",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rhs",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "scalarByte",
        type: "bytes1",
      },
    ],
    name: "fheSub",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "ct",
        type: "uint256",
      },
      {
        internalType: "bytes1",
        name: "toType",
        type: "bytes1",
      },
    ],
    name: "trivialEncrypt",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "inputHandle",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "callerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
      {
        internalType: "bytes1",
        name: "inputType",
        type: "bytes1",
      },
    ],
    name: "verifyCiphertext",
    outputs: [
      {
        internalType: "uint256",
        name: "result",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class FhevmLib__factory {
  static readonly abi = _abi;
  static createInterface(): FhevmLibInterface {
    return new Interface(_abi) as FhevmLibInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): FhevmLib {
    return new Contract(address, _abi, runner) as unknown as FhevmLib;
  }
}

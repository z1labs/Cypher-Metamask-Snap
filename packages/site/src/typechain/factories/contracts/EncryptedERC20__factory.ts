/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { NonPayableOverrides } from "../../common";
import type {
  EncryptedERC20,
  EncryptedERC20Interface,
} from "../../contracts/EncryptedERC20";
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "amount",
        type: "uint64",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "einput",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "euint64",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "mintedAmount",
        type: "uint64",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "einput",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "euint64",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "einput",
        name: "encryptedAmount",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "inputProof",
        type: "bytes",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801562000010575f80fd5b50604051620016fc380380620016fc8339810160408190526200003391620001b9565b33806200005957604051631e4fbdf760e01b81525f600482015260240160405180910390fd5b62000064816200008b565b506002620000738382620002a9565b506003620000828282620002a9565b50505062000375565b600180546001600160a01b0319169055620000a681620000a9565b50565b5f80546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f8301126200011c575f80fd5b81516001600160401b0380821115620001395762000139620000f8565b604051601f8301601f19908116603f01168101908282118183101715620001645762000164620000f8565b816040528381526020925086602085880101111562000181575f80fd5b5f91505b83821015620001a4578582018301518183018401529082019062000185565b5f602085830101528094505050505092915050565b5f8060408385031215620001cb575f80fd5b82516001600160401b0380821115620001e2575f80fd5b620001f0868387016200010c565b9350602085015191508082111562000206575f80fd5b5062000215858286016200010c565b9150509250929050565b600181811c908216806200023457607f821691505b6020821081036200025357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f821115620002a457805f5260205f20601f840160051c81016020851015620002805750805b601f840160051c820191505b81811015620002a1575f81556001016200028c565b50505b505050565b81516001600160401b03811115620002c557620002c5620000f8565b620002dd81620002d684546200021f565b8462000259565b602080601f83116001811462000313575f8415620002fb5750858301515b5f19600386901b1c1916600185901b1785556200036d565b5f85815260208120601f198616915b82811015620003435788860151825594840194600190910190840162000322565b50858210156200036157878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b61137980620003835f395ff3fe608060405234801561000f575f80fd5b506004361061012f575f3560e01c80638da5cb5b116100ad578063b32c10011161007d578063e30c397811610063578063e30c3978146102a1578063f2fde38b146102b2578063fb9d09c8146102c5575f80fd5b8063b32c10011461027b578063dd62ed3e1461028e575f80fd5b80638da5cb5b1461022957806395d89b411461024d5780639a09435214610255578063a9059cbb14610268575f80fd5b8063313ce56711610102578063715018a6116100e8578063715018a61461020457806379ba50971461020e5780637b7e0a5a14610216575f80fd5b8063313ce567146101b457806370a08231146101ce575f80fd5b806306fdde0314610133578063095ea7b31461015157806318160ddd1461017457806323b872dd146101a1575b5f80fd5b61013b6102d8565b6040516101489190611088565b60405180910390f35b61016461015f3660046110b5565b610368565b6040519015158152602001610148565b600154600160a01b900467ffffffffffffffff1660405167ffffffffffffffff9091168152602001610148565b6101646101af3660046110dd565b6103d0565b6101bc600681565b60405160ff9091168152602001610148565b6101f66101dc366004611116565b6001600160a01b03165f9081526004602052604090205490565b604051908152602001610148565b61020c610409565b005b61020c61041c565b610164610224366004611174565b610465565b5f546001600160a01b03165b6040516001600160a01b039091168152602001610148565b61013b6104a9565b6101646102633660046111ca565b6104b8565b6101646102763660046110b5565b61050a565b610164610289366004611174565b61054e565b6101f661029c366004611234565b610592565b6001546001600160a01b0316610235565b61020c6102c0366004611116565b6105c1565b61020c6102d3366004611265565b61063e565b6060600280546102e79061128c565b80601f01602080910402602001604051908101604052809291908181526020018280546103139061128c565b801561035e5780601f106103355761010080835404028352916020019161035e565b820191905f5260205f20905b81548152906001019060200180831161034157829003601f168201915b5050505050905090565b5f610372826107e4565b61037a575f80fd5b336103868185856107f5565b836001600160a01b0316816001600160a01b03167ff37f546c25e850257cc0c94f92bec94a17e2f0e884ddda268a25d8144b70eb6a60405160405180910390a35060019392505050565b5f6103da826107e4565b6103e2575f80fd5b335f6103ef86838661083f565b90506103fd868686846108d0565b50600195945050505050565b6104116109d5565b61041a5f610a01565b565b60015433906001600160a01b031681146104595760405163118cdaa760e01b81526001600160a01b03821660048201526024015b60405180910390fd5b61046281610a01565b50565b5f6103fd856102768686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a2792505050565b6060600380546102e79061128c565b5f6104fd86866101af8787878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a2792505050565b5060019695505050505050565b5f610514826107e4565b61051c575f80fd5b335f90815260046020526040812054610536908490610a34565b9050610544338585846108d0565b5060019392505050565b5f6103fd8561015f8686868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f92019190915250610a2792505050565b6001600160a01b038083165f9081526005602090815260408083209385168352929052908120545b9392505050565b6105c96109d5565b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff1990911681179091556106065f546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b6106466109d5565b61068360045f61065d5f546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020015f205482610a62565b60045f6106975f546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020015f20819055506106f760045f6106d15f546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020015f205430610a8a565b61074460045f61070e5f546001600160a01b031690565b6001600160a01b03166001600160a01b031681526020019081526020015f205461073f5f546001600160a01b031690565b610a8a565b600154610763908290600160a01b900467ffffffffffffffff166112c4565b600180547fffffffff0000000000000000ffffffffffffffffffffffffffffffffffffffff16600160a01b67ffffffffffffffff938416021790555f54604080519284168352516001600160a01b03909116917f9109de113672aaca72ede8bc906f7aafabee865311ac020fb15c71edf94a0a01919081900360200190a250565b5f6107ef8233610a98565b92915050565b6001600160a01b038084165f9081526005602090815260408083209386168352929052208190556108268130610a8a565b6108308184610a8a565b61083a8183610a8a565b505050565b6001600160a01b038084165f9081526005602090815260408083209386168352929052908120545f6108718483610a34565b6001600160a01b0387165f9081526004602052604081205491925090610898908690610a34565b90505f6108a58284610b1b565b90506108c588886108c0846108ba898c610b26565b89610b54565b6107f5565b979650505050505050565b5f6108e482846108df5f610b68565b610b54565b6001600160a01b0385165f908152600460205260408120549192509061090a9083610b74565b6001600160a01b0386165f90815260046020526040902081905590506109308130610a8a565b61093a8186610a8a565b6001600160a01b0386165f9081526004602052604081205461095c9084610b26565b6001600160a01b0388165f90815260046020526040902081905590506109828130610a8a565b61098c8188610a8a565b856001600160a01b0316876001600160a01b03167f4853ae1b4d437c4255ac16cd3ceda3465975023f27cb141584cd9d44440fed8260405160405180910390a350505050505050565b5f546001600160a01b0316331461041a5760405163118cdaa760e01b8152336004820152602401610450565b6001805473ffffffffffffffffffffffffffffffffffffffff1916905561046281610ba2565b5f6105ba83836005610bfe565b5f82610a4657610a435f610b68565b92505b81610a5757610a545f610b68565b91505b6105ba83835f610cf1565b5f82610a7457610a715f610b68565b92505b6105ba838367ffffffffffffffff166001610d9b565b610a948282610e00565b5050565b604051632fd514cd60e11b8152600481018390526001600160a01b03821660248201525f9073a76fb51e404bd47cb107531408c3be3e42269b9c90635faa299a90604401602060405180830381865afa158015610af7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105ba91906112f8565b5f6105ba8383610e73565b5f82610b3857610b355f610b68565b92505b81610b4957610b465f610b68565b91505b6105ba83835f610ef8565b5f610b60848484610f5d565b949350505050565b5f6107ef826005610fbc565b5f82610b8657610b835f610b68565b92505b81610b9757610b945f610b68565b91505b6105ba83835f610d9b565b5f80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516302e817ff60e41b81525f9073047af4f7f615f795bab5d367a7a1050d29b8069090632e817ff090610c419087903390889060f889901b90600401611317565b6020604051808303815f875af1158015610c5d573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c819190611355565b6040516346ce4e4960e11b81526004810182905233602482015290915073a76fb51e404bd47cb107531408c3be3e42269b9c90638d9c9c92906044015f604051808303815f87803b158015610cd4575f80fd5b505af1158015610ce6573d5f803e3d5ffd5b505050509392505050565b5f808215610d045750600160f81b610d07565b505f5b6040516334a6d7b960e11b815260048101869052602481018590526001600160f81b03198216604482015273047af4f7f615f795bab5d367a7a1050d29b806909063694daf72906064015b6020604051808303815f875af1158015610d6e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d929190611355565b95945050505050565b5f808215610dae5750600160f81b610db1565b505f5b60405163f953e42760e01b815260048101869052602481018590526001600160f81b03198216604482015273047af4f7f615f795bab5d367a7a1050d29b806909063f953e42790606401610d52565b604051631974142760e21b8152600481018390526001600160a01b038216602482015273a76fb51e404bd47cb107531408c3be3e42269b9c906365d0509c906044015f604051808303815f87803b158015610e59575f80fd5b505af1158015610e6b573d5f803e3d5ffd5b505050505050565b604051630ccd46b160e31b815260048101839052602481018290525f6044820181905290819073047af4f7f615f795bab5d367a7a1050d29b806909063666a3588906064016020604051808303815f875af1158015610ed4573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b609190611355565b5f808215610f0b5750600160f81b610f0e565b505f5b604051638c14cc2160e01b815260048101869052602481018590526001600160f81b03198216604482015273047af4f7f615f795bab5d367a7a1050d29b8069090638c14cc2190606401610d52565b60405163cb3b940760e01b81526004810184905260248101839052604481018290525f9073047af4f7f615f795bab5d367a7a1050d29b806909063cb3b9407906064016020604051808303815f875af1158015610ed4573d5f803e3d5ffd5b604051631ce2e8d760e31b8152600481018390526001600160f81b031960f883901b1660248201525f9073047af4f7f615f795bab5d367a7a1050d29b806909063e71746b8906044016020604051808303815f875af1158015611021573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105ba9190611355565b5f81518084525f5b818110156110695760208185018101518683018201520161104d565b505f602082860101526020601f19601f83011685010191505092915050565b602081525f6105ba6020830184611045565b80356001600160a01b03811681146110b0575f80fd5b919050565b5f80604083850312156110c6575f80fd5b6110cf8361109a565b946020939093013593505050565b5f805f606084860312156110ef575f80fd5b6110f88461109a565b92506111066020850161109a565b9150604084013590509250925092565b5f60208284031215611126575f80fd5b6105ba8261109a565b5f8083601f84011261113f575f80fd5b50813567ffffffffffffffff811115611156575f80fd5b60208301915083602082850101111561116d575f80fd5b9250929050565b5f805f8060608587031215611187575f80fd5b6111908561109a565b935060208501359250604085013567ffffffffffffffff8111156111b2575f80fd5b6111be8782880161112f565b95989497509550505050565b5f805f805f608086880312156111de575f80fd5b6111e78661109a565b94506111f56020870161109a565b935060408601359250606086013567ffffffffffffffff811115611217575f80fd5b6112238882890161112f565b969995985093965092949392505050565b5f8060408385031215611245575f80fd5b61124e8361109a565b915061125c6020840161109a565b90509250929050565b5f60208284031215611275575f80fd5b813567ffffffffffffffff811681146105ba575f80fd5b600181811c908216806112a057607f821691505b6020821081036112be57634e487b7160e01b5f52602260045260245ffd5b50919050565b67ffffffffffffffff8181168382160190808211156112f157634e487b7160e01b5f52601160045260245ffd5b5092915050565b5f60208284031215611308575f80fd5b815180151581146105ba575f80fd5b8481526001600160a01b0384166020820152608060408201525f61133e6080830185611045565b905060ff60f81b8316606083015295945050505050565b5f60208284031215611365575f80fd5b505191905056fea164736f6c6343000818000a";

type EncryptedERC20ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EncryptedERC20ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class EncryptedERC20__factory extends ContractFactory {
  constructor(...args: EncryptedERC20ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override deploy(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<
      EncryptedERC20 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): EncryptedERC20__factory {
    return super.connect(runner) as EncryptedERC20__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EncryptedERC20Interface {
    return new Interface(_abi) as EncryptedERC20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): EncryptedERC20 {
    return new Contract(address, _abi, runner) as unknown as EncryptedERC20;
  }
}
